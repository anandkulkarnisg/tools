#!/bin/bash

# Author : This is an auto commit script for scripted way to automatically commit code to either bitbucket or git without having to use any manual steps.
# Synopsis : A productivity tool to save key strokes and typing.

# First validate if the parameters are proper. Expects two parameters a) The first parameter is either g/b [ stands for git or bitbucket ].
# b) The second parameter is repository name. It then construct an auto commit message and attempts to add existing files recursively, create a commit and do remote push.

function showUsage()
{
  echo -e "Usage : The proper usage is : autocommit [g/b] [repo-name]. g stands for git and b stands for bitbucket"
}

if [ $# -ne 2 ]; then
  showUsage
  echo -e "Exiting with error code 1..."
  exit 1
fi

# Validate the parameters now.
if [ "$1" != "g" -a "$1" != "b" ]; then
  echo -e "The first parameter to script $1 is invalid. It should be either if [g/b].Exiting with error code 1..."
  exit 1
fi

# Validate if the repository exits which is second parameter.
repoType=$(echo $1|sed "s/g/git/g"|sed "s/b/bitbucket/g")
repoName=$2

repoPath=$HOME/$repoType/$repoName

if [ ! -d $repoPath ]; then
  echo -e "The repository expected is not found at path $repoPath. Please verify..."
  echo -e "Exiting with error code 1..."
fi

cwd=$PWD
autocommitmsg="commited via autocommit tool"
echo "The auto commit message is ---> $autocommitmsg"

# Action the command now.
cd $repoPath
git add .
gcm "$autocommitmsg"
git push -v
cd $cwd 

# Exit with grace of success.
exit 0
